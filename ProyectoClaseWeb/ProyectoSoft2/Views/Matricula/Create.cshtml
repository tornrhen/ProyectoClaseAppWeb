@model ProyectoSoft2.Models.Matricula.MatriculaViewModel

@{
    ViewBag.Title = "Create";
}

<div class="col-lg-6 col-md-6">
    <div class="jarviswidget jarviswidget-color-blueDark" id="">
        <header role="heading">
            <span class="widget-icon"> <i class="fa fa-user"></i> </span>
            <h2><strong>Matricular Alumno</strong></h2>
            <div class="widget-toolbar" role="menu">
                <a href="/Matricula/Index" class="btn btn-primary">   Ir a la Lista de Matriculas</a>
            </div>
        </header>
        <!-- widget div-->
        <div>
            <!-- widget content -->
            <div class="widget-body no-padding">

                <form class="smart-form" id="FormMatricula">
                    <fieldset style="padding-top:10px;">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <section class="col col-lg-12">
                                @*<strong>Informacion Personal</strong>
                                    <hr />*@
                                <div class="row" style="padding:20px;">
                                    <section>
                                        <span>@Html.LabelFor(model => model.IdUsuario, htmlAttributes: new { @class = "control-label" })</span>
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.IdUsuario, new SelectList(ViewBag.ListaUsuarios, "Value", "Text"), "", new { @class = "form-control select2 ValidateSelect", style = "width:100%;" })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.IdUsuario, null, new { @class = "text-danger" })
                                    </section>

                                    <section>
                                        <span>@Html.LabelFor(model => model.IdCentro, htmlAttributes: new { @class = "control-label" })</span>
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.IdCentro, new SelectList(ViewBag.ListaCentros, "Value", "Text"), "", new { @class = "form-control select2 ValidateSelect", style = "width:100%;" })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.IdCentro, null, new { @class = "text-danger" })
                                    </section>

                                    <section>
                                        <span>@Html.LabelFor(model => model.IdCurso, htmlAttributes: new { @class = "control-label" })</span>
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.IdCurso, new SelectList(ViewBag.ListaCursos, "Value", "Text"), new { @class = "form-control select2 ValidateSelect", style = "width:100%;" })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.IdCurso, null, new { @class = "text-danger" })
                                    </section>
                                </div>
                                <a class="btn btn-success btn-lg" onclick="CrearMatricula()"> Guardar</a>
                            </section>
                        </div>
                    </fieldset>

                </form>


            </div>
        </div>
    </div>


</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var $selectUsuario = $("#IdUsuario").select2({ placeholder: "-- Seleccionar Usuario --" });
        var $selectCentro = $("#IdCentro").select2({ placeholder: "-- Seleccionar Centro --" });
        var $selectCurso = $("#IdCurso").select2({ placeholder: "-- Seleccionar Curso --" });

        $('#IdCentro').on('select2:close', function (evt) {
            SelectCentro();
        });

        function SelectCentro() {
            $("#IdCurso").empty();

            var id = $("#IdCentro option:selected").val();
            if (id != "") {
                $.ajax({
                    url: "/Matricula/GetListaCurso",
                    type: "GET",
                    data: { id: id },
                    success: function (data) {
                        $("#IdCurso").select2({ data: data.data, placeholder: "-- Seleccionar Curso --" });
                        $("#IdCurso").val('').trigger('change');
                    },
                    error: function (data) {
                        console.log("error");
                    }
                });
            }
            else {

            }
        }

        function ValidateSelect(element) {
            var response = true;
            var idElement = $(element).attr("id");
            console.log($(element).val());
            if ($(element).val() === "" || $(element).val() === null) {
                $("span[data-valmsg-for='" + idElement + "']").html("Seleccione una opcion");
                response = false;
            } else {
                $("span[data-valmsg-for='" + idElement + "']").html("");
            }
            return response;
        }

        function CrearMatricula() {
            var result = true;
            $('.ValidateSelect').each(function () { if (!ValidateSelect($(this))) result = false; });     
            if (!result) { return false; }

            LoadWaitNotification();
                $.ajax({
                    url: "/Matricula/Create",
                    type: 'POST',
                    dataType: 'json',
                    data: $('#FormMatricula').serialize(),
                    success: function (data) {
                        if (data.Estado) {
                            ShowboxSuccess(data.Mensaje, data.Titulo);
                            document.location.href = '/Matricula/Index';
                        }
                        else ShowboxError(data.Mensaje, data.Titulo);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        alert(textStatus + ": crear contrato");
                        UnloadWaitNotification();
                    },
                    complete: function () { UnloadWaitNotification(); }
                });
        };




    </script>

}


